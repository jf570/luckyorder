import nest_asyncio
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

# Применяем nest_asyncio для работы с асинхронным кодом в уже работающем цикле
nest_asyncio.apply()

# Включаем логирование для отладки
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# Токен бота
TOKEN = "7552907266:AAHW6TJPNHa7C_sD2PPjTe4-CgGRi6q7mho"

# Список администраторов, на данный момент пустой
# Можно добавить сюда ID администраторов вручную
ADMIN_IDS = []

# Обработчик стартовой команды
async def start(update: Update, context):
    await update.message.reply_text("Привет! Я бот, помогающий таксистам отвечать на запросы.")

# Обработка сообщений
async def handle_message(update: Update, context):
    try:
        # Получаем ID пользователя, отправившего сообщение
        user_id = update.message.from_user.id

        # Проверяем, является ли пользователь администратором
        # Получаем список администраторов
        admins = await update.message.chat.get_administrators()
        admin_ids = [admin.user.id for admin in admins]

        if user_id not in admin_ids:  # Если это не администратор
            # Просто отвечаем на любое сообщение текстом "Еду"
            if update.message.text.lower() != "еду":  # Не отвечаем на "еду"
                await update.message.reply_text("Еду")
        else:
            logger.info(f"Сообщение от администратора, не отвечаем.")
    except Exception as e:
        logger.error(f"Ошибка при обработке сообщения: {e}")
        if update.message:
            await update.message.reply_text("Произошла ошибка при обработке вашего сообщения.")

async def main():
    try:
        # Создаем объект бота
        application = Application.builder().token(TOKEN).build()

        # Обработчики команд
        application.add_handler(CommandHandler("start", start))

        # Обработчик всех текстовых сообщений (в группе и в личке)
        application.add_handler(MessageHandler(filters.TEXT, handle_message))

        # Запуск бота
        await application.run_polling()
    except Exception as e:
        logger.error(f"Ошибка при запуске бота: {e}")

import asyncio
asyncio.run(main())
